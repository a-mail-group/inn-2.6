.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "INNCONFVAL 1"
.TH INNCONFVAL 1 "2015-09-12" "INN 2.6.3" "InterNetNews Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
innconfval \- Get configuration parameters from inn.conf
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBinnconfval\fR [\fB\-pstv\fR] [\fB\-i\fR \fIfile\fR] [\fIparameter\fR ...]
.PP
\&\fBinnconfval\fR \fB\-C\fR [\fB\-i\fR \fIfile\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBinnconfval\fR normally prints the values of the parameters specified on
the command line.  By default, it just prints the parameter values, but if
\&\fB\-p\fR, \fB\-s\fR, or \fB\-t\fR are given, it instead prints the parameter and
value in the form of a variable assignment in Perl, Bourne shell, or Tcl
respectively.  If no parameters are specifically requested, \fBinnconfval\fR
prints out all parameter values (this isn't particularly useful unless one
of \fB\-p\fR, \fB\-s\fR, or \fB\-t\fR were specified).
.PP
All parameters are taken from \fIinn.conf\fR except for \fIversion\fR, which is
always the version string of \s-1INN.\s0
.PP
If given the \fB\-C\fR option, \fBinnconfval\fR instead checks \fIinn.conf\fR,
reporting any problems found to standard error.  \fBinnconfval\fR will exit
with status 0 if no problems are found and with status 1 otherwise.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-C\fR" 4
.IX Item "-C"
Check \fIinn.conf\fR rather than printing out the values of parameters.
.IP "\fB\-i\fR \fIfile\fR" 4
.IX Item "-i file"
Use \fIfile\fR as the source configuration file rather than \fIinn.conf\fR.
\&\fIfile\fR must be a valid \fIinn.conf\fR file and will be parsed the same as
\&\fIinn.conf\fR would be.
.IP "\fB\-p\fR" 4
.IX Item "-p"
Print out parameters as Perl assignment statements.  The variable name
will be the same as the \fIinn.conf\fR parameter, and string values will be
enclosed in single quotes with appropriate escaping.  Boolean values will
be mapped to the strings \f(CW\*(C`true\*(C'\fR or \f(CW\*(C`false\*(C'\fR.  List values will be mapped
to an array of strings.  \s-1NULL\s0 values are printed out with the \f(CW\*(C`undef\*(C'\fR value.
.Sp
Here is an example:
.Sp
.Vb 5
\&    $enableoverview = \*(Aqtrue\*(Aq;
\&    @extraoverviewadvertised = ( \*(AqNewsgroups\*(Aq, \*(AqInjection\-Info\*(Aq );
\&    @extraoverviewhidden = undef;
\&    $organization = \*(AqLet\e\*(Aqs try nasty "quotes"\*(Aq;
\&    $maxforks = 10;
.Ve
.Sp
If \fBinnconfval\fR is called via the Perl \f(CW\*(C`INN::Config\*(C'\fR module, all
these variables are properly exported.
.IP "\fB\-s\fR" 4
.IX Item "-s"
Print out parameters as Bourne shell assignment statements.  The variable
name will be the \fIinn.conf\fR parameter name in all capitals, and all
variables will be exported, if not \s-1NULL. \s0 String values will be enclosed in
single quotes with appropriate escaping, and boolean values will be mapped
to \f(CW\*(C`true\*(C'\fR or \f(CW\*(C`false\*(C'\fR.  List values will be mapped to a space-separated
string representing an array of strings (as Bourne shell does not recognize
arrays, contrary to several other shells, an array cannot be returned for
interoperability reasons).
.Sp
Here is an example:
.Sp
.Vb 4
\&    ENABLEOVERVIEW=true; export ENABLEOVERVIEW;
\&    EXTRAOVERVIEWADVERTISED=\*(Aq"Newsgroups" "Injection\-Info"\*(Aq; export EXTRAOVERVIEWADVERTISED;
\&    ORGANIZATION=\*(AqLet\*(Aq\e\*(Aq\*(Aqs try nasty "quotes"\*(Aq; export ORGANIZATION;
\&    MAXFORKS=10; export MAXFORKS;
.Ve
.IP "\fB\-t\fR" 4
.IX Item "-t"
Print out parameters as Tcl assignment statements.  The variable name will
be the same as the \fIinn.conf\fR parameter name but with \f(CW\*(C`inn_\*(C'\fR prepended,
and string variables will be escaped appropriately.  Boolean values will
be mapped to the strings \f(CW\*(C`true\*(C'\fR or \f(CW\*(C`false\*(C'\fR.  List values will be mapped
to an array of strings.  \s-1NULL\s0 values are not printed out.
.Sp
Here is an example:
.Sp
.Vb 4
\&    set inn_enableoverview "true"
\&    set inn_extraoverviewadvertised { "Newsgroups" "Injection\-Info" }
\&    set inn_organization "Let\*(Aqs try nasty \e"quotes\e""
\&    set inn_maxforks 10
.Ve
.IP "\fB\-v\fR" 4
.IX Item "-v"
Print \s-1INN\s0's version.  This is equivalent to \f(CW\*(C`innconfval version\*(C'\fR.
.SH "HISTORY"
.IX Header "HISTORY"
Written by Rich \f(CW$alz\fR <rsalz@uunet.uu.net> for InterNetNews.
.PP
\&\f(CW$Id:\fR innconfval.pod 9288 2011\-07\-22 23:08:57Z iulius $
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIinn.conf\fR\|(5), \fIINN::Config\fR\|(3pm).
