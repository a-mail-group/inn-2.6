.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AUTH_KRB5 8"
.TH AUTH_KRB5 8 "2015-09-12" "INN 2.6.3" "InterNetNews Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
auth_krb5 \- nnrpd Kerberos\ v5 authenticator
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBauth_krb5\fR [\fB\-i\fR \fIinstance\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This program does authentication for \fBnnrpd\fR against a Kerberos\ v5\ \s-1KDC.\s0
This is \s-1NOT\s0 real Kerberos authentication using service tickets; instead, a
username and password is used to attempt to obtain a Kerberos\ v5\ \s-1TGT\s0 to
confirm that they are valid.  As such, this authenticator assumes that
\&\fBnnrpd\fR has been given the user's username and password, and therefore is
not as secure as real Kerberos authentication.  It generally should only
be used with \s-1NNTP\s0 over \s-1TLS\s0 to protect the password from sniffing.
.PP
Normally, you do not want to use this authenticator.  Instead, use
\&\fBckpasswd\fR with \s-1PAM\s0 support and configure the \fBnnrpd\fR \s-1PAM\s0 stack to use a
Kerberos \s-1PAM\s0 module.  A full Kerberos \s-1PAM\s0 module is more sophisticated
about how it validates passwords and has a much broader array of options
than this authenticator.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-i\fR \fIinstance\fR" 4
.IX Item "-i instance"
If this option is given, \fIinstance\fR will be used as the instance of the
principal received from \fBnnrpd\fR and authentication will be done against
that principal instead of the base principal.  In other words, a principal
like \f(CW\*(C`user\*(C'\fR, when passed to \fBauth_krb5\fR invoked with \f(CW\*(C`\-i nntp\*(C'\fR, will be
transformed into \f(CW\*(C`user/nntp\*(C'\fR before attempting Kerberos authentication.
.Sp
Since giving one's password to \fBnnrpd\fR is not as secure as normal
Kerberos authentication, this option supports a configuration where all
users are given a separate instance just for news authentication with its
own password, so their regular account password isn't exposed via \s-1NNTP.\s0
.SH "EXAMPLE"
.IX Header "EXAMPLE"
The following \fIreaders.conf\fR\|(5) fragment tells nnrpd to authenticate users
by attempting to obtain Kerberos\ v5\ TGTs for them, appending an instance
of \f(CW\*(C`nntp\*(C'\fR to usernames before doing so:
.PP
.Vb 3
\&    auth kerberos {
\&        auth: "auth_krb5 \-i nntp"
\&    }
\&
\&    access kerberos {
\&        users: "*/nntp"
\&        newsgroups: example.*
\&    }
.Ve
.PP
Access is granted to the example.* groups for all users who successfully
authenticate.
.SH "BUGS"
.IX Header "BUGS"
Currently, any username containing realm information (containing \f(CW\*(C`@\*(C'\fR) is
rejected.  This is to prevent someone from passing in a username
corresponding to a principal in another realm that they have access to and
gaining access to the news server via it.  However, this is also something
that people may wish to do under some circumstances, so there should be a
better way of handling it (such as, perhaps, a list of acceptable realms
or a \fB\-r\fR flag specifying the realm in which to attempt authentication).
.PP
It's not clear the right thing to do when the username passed in contains
a \f(CW\*(C`/\*(C'\fR and \fB\-i\fR was also given.  Right now, \fBauth_krb5\fR will create a
malformed Kerberos principal with multiple instances and attempt to
authenticate against it, which will fail but perhaps not with the best
error message.
.SH "HISTORY"
.IX Header "HISTORY"
Originally written by Christopher P.\ Lindsey.  This documentation was
written by Russ Allbery <eagle@eyrie.org> based on Christopher's original
\&\fI\s-1README\s0\fR file.
.PP
\&\f(CW$Id:\fR auth_krb5.pod 9774 2015\-01\-04 21:50:10Z eagle $
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIckpasswd\fR\|(8), \fInnrpd\fR\|(8), \fIreaders.conf\fR\|(5).
