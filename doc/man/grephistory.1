.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GREPHISTORY 1"
.TH GREPHISTORY 1 "2016-10-07" "INN 2.6.3" "InterNetNews Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
grephistory \- Query the INN history database
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBgrephistory\fR [\fB\-eilnqsv\fR] [\fB\-f\fR \fIdb\fR] [\fImessage-id\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBgrephistory\fR queries the \s-1INN\s0 history database for information about the
specified message-ID.  If no flags are given, the program prints the
storage \s-1API\s0 token of the corresponding article, or \f(CW\*(C`/dev/null\*(C'\fR if the
article is listed in the history database but not stored on the server.
If the message-ID cannot be found in the database, \fBgrephistory\fR will
print \f(CW\*(C`grephistory: not found\*(C'\fR and exit with a non-zero status.
.PP
Be sure to escape any special characters in the message \s-1ID\s0 from the shell.
Single quotes are recommended for this purpose since many message-IDs
contain dollar signs.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-e\fR" 4
.IX Item "-e"
Only print the storage token if the article is stored on the system.  (In
other words, suppress the \f(CW\*(C`/dev/null\*(C'\fR or \f(CW\*(C`not found\*(C'\fR output for missing
or remembered articles.)
.IP "\fB\-f\fR \fIdb\fR" 4
.IX Item "-f db"
Query the history database \fIdb\fR rather than the default history database.
.IP "\fB\-i\fR" 4
.IX Item "-i"
Rather than expecting a message-ID on the command line, \fBgrephistory\fR
will read a list of message-IDs on standard input, one per line.  Leading
and trailing whitespace is ignored, as are any malformed lines.  It will
print on standard output those message-IDs which are not found in the
history database.  This is used when processing \f(CW\*(C`ihave\*(C'\fR control messages.
.IP "\fB\-l\fR" 4
.IX Item "-l"
Display the entire line from the history database, rather than just the
storage \s-1API\s0 token.  If the message-ID is present in the history database
but has no storage \s-1API\s0 token, \fBgrephistory\fR does not print anything.
.IP "\fB\-n\fR" 4
.IX Item "-n"
If the message-ID is present in the history database but has no storage
\&\s-1API\s0 token, print \f(CW\*(C`/dev/null\*(C'\fR and exit successfully.  This can happen if
an article has been cancelled or expired, but history information has
still been retained.  This is the default behavior.
.IP "\fB\-q\fR" 4
.IX Item "-q"
Don't print any message, but still exit with the appropriate status.
.IP "\fB\-s\fR" 4
.IX Item "-s"
Rather than expecting a message-ID on the command line, \fBgrephistory\fR
will read a list of message-IDs on standard input, one per line.  Leading
and trailing whitespace is ignored, as are any malformed lines.  It will
print on standard output the storage \s-1API\s0 tokens for any articles that are
still available, one per line.  This flag is used when processing
\&\f(CW\*(C`sendme\*(C'\fR control messages.
.IP "\fB\-v\fR" 4
.IX Item "-v"
Print out the hash of the message-ID for diagnostic purposes, as well as
any other requested information.  This flag is not useful with \fB\-i\fR or
\&\fB\-s\fR.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
In case the requested article is not listed in the history database:
.PP
.Vb 4
\&    % grephistory \*(Aq<unknown.article@news.example.com>\*(Aq
\&    grephistory: not found
\&    % grephistory \-v \*(Aq<unknown.article@news.example.com>\*(Aq
\&    grephistory: not found (hash is 501C66C22932BA91131186D7218201EB)
.Ve
.PP
In case the requested article is listed in the history database
but not stored on the server:
.PP
.Vb 2
\&    % grephistory \*(Aq<remembered.article@news.example.com>\*(Aq
\&    /dev/null
.Ve
.PP
In case the requested article is stored on the server:
.PP
.Vb 4
\&    % grephistory \*(Aq<87fxeaay1z.fsf@windlord.stanford.edu>\*(Aq
\&    @02014A2DD6231FCC00000000000000000000@
\&    % grephistory \-l \*(Aq<87fxeaay1z.fsf@windlord.stanford.edu>\*(Aq
\&    [B6DDF69376E3CC199246CEC949B3ACAC]  1244517923~\-~1244517912  @02014A2DD6231FCC00000000000000000000@
.Ve
.PP
With \fBsm\fR, we can retrieve the article, and get its posting date:
.PP
.Vb 2
\&    % grephistory \*(Aq<87fxeaay1z.fsf@windlord.stanford.edu>\*(Aq | sm | grep Date
\&    Date: Mon, 08 Jun 2009 20:25:12 \-0700
\&
\&    % convdate \-dc 1244517912
\&    Tue, 9 Jun 2009 03:25:12 \-0000 (UTC)
.Ve
.PP
It matches the number recorded in history as for its posting date.
.SH "HISTORY"
.IX Header "HISTORY"
Written by Rich \f(CW$alz\fR <rsalz@uunet.uu.net> for InterNetNews.  Rewritten in
\&\s-1POD\s0 by Russ Allbery <eagle@eyrie.org>.
.PP
\&\f(CW$Id:\fR grephistory.pod 9971 2015\-12\-10 20:30:10Z iulius $
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIhistory\fR\|(5), \fIinn.conf\fR\|(5), \fIsm\fR\|(1).
