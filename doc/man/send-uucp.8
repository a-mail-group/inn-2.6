.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SEND-UUCP 8"
.TH SEND-UUCP 8 "2016-11-06" "INN 2.6.3" "InterNetNews Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
send\-uucp \- Send Usenet articles via UUCP
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBsend-uucp\fR [\fIsite\fR ...]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBsend-uucp\fR program processes batch files written by \fIinnd\fR\|(8) to send
Usenet articles to \s-1UUCP\s0 sites.  It reads a configuration file to control how
it behaves with various sites.  Normally, it is run periodically out of cron
to put together batches and send them to remote \s-1UUCP\s0 sites.
.PP
It makes it possible to reduce bandwidth usage and to send news to remote
\&\s-1UUCP\s0 sites which cannot receive a real-time feed (for instance if they
are over dial-up connections).
.SH "OPTIONS"
.IX Header "OPTIONS"
Any arguments provided to the program are interpreted as a list of sites
specified in \fIsend\-uucp.cf\fR for which batches should be generated.  If no
arguments are supplied then batches will be generated for all sites listed
in that configuration file.
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
The sites to which articles are to be sent must be configured in the
configuration file \fIsend\-uucp.cf\fR in \fIpathetc\fR as set in \fIinn.conf\fR.  Each
site is specified with a line of the form:
.PP
.Vb 1
\&    site[:host[:funnel]] [compressor [maxsize [batchtime]]]
.Ve
.IP "\fIsite\fR" 4
.IX Item "site"
The news site name being configured.  This must match a site name 
from \fInewsfeeds\fR\|(5).
.IP "\fIhost\fR" 4
.IX Item "host"
The \s-1UUCP\s0 host name to which batches should be sent for this site.
If omitted, the news site name will be used as the \s-1UUCP\s0 host name.
.IP "\fIfunnel\fR" 4
.IX Item "funnel"
In the case of a site configured as a funnel, \fBsend-uucp\fR needs to flush
the channel (or exploder) being used as the target of the funnel instead of
flushing the site.  This is the way to tell \fBsend-uucp\fR the name of the
channel or exploder to flush for this site.  If not specified, default to
flushing the site.
.IP "\fIcompressor\fR" 4
.IX Item "compressor"
The compression method to use for batches.  This should be one of \f(CW\*(C`bzip2\*(C'\fR,
\&\f(CW\*(C`compress\*(C'\fR, \f(CW\*(C`gzip\*(C'\fR or \f(CW\*(C`none\*(C'\fR.  Arguments for the compression command may be
specified by using \f(CW\*(C`_\*(C'\fR instead of spaces.  For example, \f(CW\*(C`gzip_\-9\*(C'\fR.
The default value is \f(CW\*(C`gzip\*(C'\fR.
.IP "\fImaxsize\fR" 4
.IX Item "maxsize"
The maximum size in bytes of a single batch \fIbefore\fR compression.  The default
value is \f(CW500000\fR bytes.
.IP "\fIbatchtime\fR" 4
.IX Item "batchtime"
A comma separated list of hours during which batches should be generated for
a given site.  When \fBsend-uucp\fR runs, a site will only be processed if the
current hour matches one of the hours in \fIbatchtime\fR.  The default is no
limitation on when to generate batches.
.PP
Fields are separated by spaces and only the site name needs to be specified,
with defaults being used for unspecified values.  If the first character on
a line is a hash sign (\f(CW\*(C`#\*(C'\fR) then the rest of the line is ignored.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
Here is an example for the \fIsend\-uucp.cf\fR configuration file:
.PP
.Vb 8
\&    zoetermeer      gzip            1048576         5,18,22
\&    hoofddorp       gzip            1048576         5,18,22
\&    pa3ebv          gzip            1048576         5,18,22
\&    drinkel         bzip2           1048576         5,6,18,20,22,0,2
\&    manhole         compress        1048576         5,18,22
\&    owl             compress        1048576
\&    able
\&    pern::MYFUNNEL!
.Ve
.PP
This defines eight \s-1UUCP\s0 sites.  The first three and the last two use \f(CW\*(C`gzip\*(C'\fR
compression, the fourth site (\f(CW\*(C`drinkel\*(C'\fR) uses \f(CW\*(C`bzip2\*(C'\fR and the remaining sites
(\f(CW\*(C`manhole\*(C'\fR and \f(CW\*(C`owl\*(C'\fR) use \f(CW\*(C`compress\*(C'\fR.  The first six use a batch size of
1\ \s-1MB,\s0 and the two last sites (\f(CW\*(C`able\*(C'\fR and \f(CW\*(C`pern\*(C'\fR) use the default of
500,000 bytes.  The \f(CW\*(C`zoetermeer\*(C'\fR, \f(CW\*(C`hoofddorp\*(C'\fR, \f(CW\*(C`pa3ebv\*(C'\fR, and \f(CW\*(C`manhole\*(C'\fR sites
will only have batches generated for them during the hours of 05:00, 18:00,
and 22:00, and the \f(CW\*(C`drinkel\*(C'\fR site will only have batches generated during those
hours and 06:00, 20:00, 00:00, and 02:00.  There are no restrictions on when
batches will be generated for \f(CW\*(C`owl\*(C'\fR, \f(CW\*(C`able\*(C'\fR and \f(CW\*(C`pern\*(C'\fR.
.PP
The \f(CW\*(C`pern\*(C'\fR site is configured as a funnel into \f(CW\*(C`MYFUNNEL!\*(C'\fR.  \fBsend-uucp\fR will
issue \f(CW\*(C`ctlinnd flush MYFUNNEL!\*(C'\fR instead of \f(CW\*(C`ctlinnd flush pern\*(C'\fR.
.PP
As for the \fInewsfeeds\fR file, the usual flags used for a \s-1UUCP\s0 feed are
\&\f(CW\*(C`Tf,Wnb\*(C'\fR.  Here is a typical entry for \f(CW\*(C`zoetermeer\*(C'\fR, where the batching
is kept between 4\ \s-1KB\s0 and 1\ \s-1KB:\s0
.PP
.Vb 3
\&    zoetermeer\e
\&        :*,!junk,!control,!control.*/!foo\e
\&        :Tf,Wnb,B4096/1024:
.Ve
.SH "FILES"
.IX Header "FILES"
.IP "\fIpathbin\fR/send\-uucp" 4
.IX Item "pathbin/send-uucp"
The Perl script itself used to create news batches from the outgoing files.
.IP "\fIpathetc\fR/send\-uucp.cf" 4
.IX Item "pathetc/send-uucp.cf"
The configuration file which specifies a list of sites to be processed.
.SH "HISTORY"
.IX Header "HISTORY"
This program was originally written by Edvard Tuinder <ed@elm.net> and then
maintained and extended by Miquel van Smoorenburg <miquels@cistron.nl>.
Marco d'Itri <md@linux.it> cleaned up the code for inclusion in \s-1INN. \s0 This
manual page was written by Mark Brown <broonie@sirena.org.uk>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIinnd\fR\|(8), \fInewsfeeds\fR\|(5), \fIuucp\fR\|(8).
