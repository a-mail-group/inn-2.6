.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL-NOCEM 8"
.TH PERL-NOCEM 8 "2018-03-18" "INN 2.6.3" "InterNetNews Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl\-nocem \- A NoCeM\-on\-spool implementation for INN\ 2.x
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
perl-nocem
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
NoCeM, which is pronounced \fINo See 'Em\fR, is a protocol enabling
authenticated third-parties to issue notices which can be used
to cancel unwanted articles (like spam and articles in moderated
newsgroups which were not approved by their moderators).  It can
also be used by readers as a \fIthird-party killfile\fR.  It is
intended to eventually replace the protocol for third-party cancel
messages.
.PP
\&\fBperl-nocem\fR processes third-party, PGP-signed article cancellation
notices.  It is possible not to honour all NoCeM notices but only those
which are sent by people whom you trust (that is to say if you trust
the \s-1PGP\s0 key they use to sign their NoCeM notices).  Indeed, it is up
to you to decide whether you wish to honour their notices, depending
on the criteria they use.
.PP
Processing NoCeM notices is easy to set up:
.IP "1." 4
Import the keys of the NoCeM issuers you trust in order to check
the authenticity of their notices.  You can do:
.Sp
.Vb 2
\&    gpg \-\-no\-default\-keyring \-\-primary\-keyring <pathetc>/pgp/ncmring.gpg \-\-import <key\-file>
\&    chmod 644 <pathetc>/pgp/ncmring.gpg
.Ve
.Sp
where <pathetc> is the value of the \fIpathetc\fR parameter set in
\&\fIinn.conf\fR and <key\-file> the file containing the key(s) to import.
The keyring must be located in <pathetc>/pgp/ncmring.gpg; you only
have to create the directory <pathetc>/pgp before using \fBgpg\fR (it will
automatically generate the \fIncmring.gpg\fR file) and make sure the news
user can read this file, once generated.
.Sp
For old PGP-generated keys, you may have to use
\&\fB\-\-allow\-non\-selfsigned\-uid\fR if they are not properly self-signed,
but anyone creating a key really should self-sign the key.  Current \s-1PGP\s0
implementations do this automatically.
.Sp
The keys of NoCeM issuers can be found in the web site of \fIThe NoCeM Registry\fR:
<http://rosalind.home.xs4all.nl/nocemreg/nocemreg.html>.  You can even
download there a unique file which contains all the keys.
.IP "2." 4
Create a \fInocem.ctl\fR config file in \fIpathetc\fR indicating the NoCeM issuers
and notices you want to follow.  This permission file contains lines like:
.Sp
.Vb 2
\&    bleachbot@httrack.com:spam,site
\&    pgpmoose@killfile.org:pgpmoose\-forged\-moderation
.Ve
.Sp
This will remove all articles for which the issuer (first part of the line,
before the colon \f(CW\*(C`:\*(C'\fR) has issued NoCeM notices corresponding to the
criteria specified after the colon.
.Sp
You will also find information about that on the web site of
\&\fIThe NoCeM Registry\fR.
.IP "3." 4
Add to the \fInewsfeeds\fR file an entry like this one in order to feed
\&\fBperl-nocem\fR the NoCeM notices posted to alt.nocem.misc and
news.lists.filters:
.Sp
.Vb 3
\&    nocem!\e
\&        :!*,alt.nocem.misc,news.lists.filters\e
\&        :Tc,Wf,Ap:<pathbin>/perl\-nocem
.Ve
.Sp
with the correct path to \fBperl-nocem\fR, located in <pathbin>.  Then, reload
the \fInewsfeeds\fR file (\f(CW\*(C`ctlinnd reload newsfeeds \*(AqNoCeM channel feed\*(Aq\*(C'\fR).
.Sp
Note that you should at least carry news.lists.filters on your news
server (or other newsgroups where NoCeM notices are sent) if you wish
to process them.
.IP "4." 4
Everything should now work.  However, do not hesitate to manually test
\&\fBperl-nocem\fR with a NoCeM notice, using:
.Sp
.Vb 1
\&    grephistory \*(Aq<Message\-ID>\*(Aq | perl\-nocem
.Ve
.Sp
Indeed, \fBperl-nocem\fR expects tokens on its standard input, and
\&\fBgrephistory\fR can easily give it the token of a known article,
thanks to its Message-ID.
.PP
When you have verified that everything works, you can eventually turn
off regular spam cancels, if you want, not processing any longer
cancels containing \f(CW\*(C`cyberspam\*(C'\fR in the Path: header (see the
\&\fIrefusecybercancels\fR parameter in \fIinn.conf\fR).
.SH "FILES"
.IX Header "FILES"
.IP "\fIpathbin\fR/perl\-nocem" 4
.IX Item "pathbin/perl-nocem"
The Perl script itself used to process NoCeM notices.
.IP "\fIpathetc\fR/nocem.ctl" 4
.IX Item "pathetc/nocem.ctl"
The configuration file which specifies the NoCeM notices to be processed.
.IP "\fIpathetc\fR/pgp/ncmring.gpg" 4
.IX Item "pathetc/pgp/ncmring.gpg"
The keyring which contains the public keys of trusted NoCeM issuers.
.SH "BUGS"
.IX Header "BUGS"
The Subject: header is not checked for the @@NCM string and there is no
check for the presence of the References: header.
.PP
The Newsgroups: pseudo header is not checked, but this can be done in
\&\fIlocal_want_cancel_id()\fR.
.PP
The Hierarchies: header is ignored.
.SH "HISTORY"
.IX Header "HISTORY"
Copyright 2000 by Miquel van Smoorenburg <miquels@cistron.nl>.
.PP
Copyright 2001 by Marco d'Itri <md@linux.it>.
.PP
\&\f(CW$Id:\fR perl\-nocem.in 10245 2018\-02\-16 21:11:59Z iulius $
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIgpg\fR\|(1), \fIgpgv\fR\|(1), \fIgrephistory\fR\|(1), \fIinn.conf\fR\|(5), \fInewsfeeds\fR\|(5), \fIpgp\fR\|(1).
