.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "NEWSLOG 5"
.TH NEWSLOG 5 "2015-09-12" "INN 2.6.3" "InterNetNews Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
newslog \- Description of INN log files
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Most log files created by Usenet programs reside in the \fIpathlog\fR directory
set in \fIinn.conf\fR and have a \f(CW\*(C`.log\*(C'\fR extension.  Several versions are usually
kept with an additional extension such as \f(CW.1\fR, \f(CW.2\fR, etc. \-\-\ the higher
the number, the older the log.  These old versions are stored in \fIpathlog\fR/OLD;
they may be compressed and thus may have a \f(CW\*(C`.1.gz\*(C'\fR, \f(CW\*(C`.2.gz\*(C'\fR, etc. extension,
up to \f(CW\*(C`.nn.gz\*(C'\fR where \f(CW\*(C`nn\*(C'\fR is the number of old logs kept by \fBscanlogs\fR
which is set by \fIlogcycles\fR in \fIinn.conf\fR.
.PP
The \fBscanlogs\fR script and related utilities are responsible for rotating
and compressing these files.  Some log files always have data (like
\&\fInews.notice\fR), others only have data if there is a problem (like
\&\fInews.err\fR), and others are only created if a particular program is used
(like \fIsend\-uucp.log\fR used by \fBsend-uucp\fR) or if a configuration parameter
is set (like \fIinnfeed.log\fR used by \fBinnfeed\fR when \fIdebug-level\fR is set
in \fIinnfeed.conf\fR).
.PP
Besides, the \fBinnstat\fR script monitors the size of all log files.
.PP
Here are the log files used by \s-1INN:\s0
.IP "\fIcontrol.log\fR" 4
.IX Item "control.log"
This file maintains a count of the number of newgroup and rmgroup control
messages seen for each newsgroup.  The count is of the number of control
messages with the indicated arguments, regardless if they were actually
processed.  All control arguments, including invalid ones, are counted.
An example of lines which can be found in that log file is:
.Sp
.Vb 3
\&    3 Control: newgroup foo.bar moderated
\&    3 Control: rmgroup misc.removed
\&    1 Control: newgroup misc.created
.Ve
.Sp
This file is updated by \fBtally.control\fR, which is invoked by \fBscanlogs\fR
if either one of these two log files exists in \fIpathlog\fR:
.Sp
.Vb 2
\&    newgroup.log
\&    rmgroup.log
.Ve
.Sp
These two log files contain a summary line describing the control message
and the action taken by \fBcontrolchan\fR, followed by the article indented
by four spaces, and a blank line.  Whereas these files are rotated,
\&\fIcontrol.log\fR is not rotated so as to keep the count of seen control
messages.
.Sp
Note that other control log files are also rotated by \fBscanlogs\fR, if they
exist, but their contents are not summarized.  Here are their names:
.Sp
.Vb 8
\&    checkgroups.log
\&    default.log
\&    ihave.log
\&    miscctl.log
\&    sendme.log
\&    sendsys.log
\&    senduuname.log
\&    version.log
.Ve
.Sp
In order to create these files, the <type> and <action> fields of
relevant \fIcontrol.ctl\fR entries should be correctly set.  For instance:
.Sp
.Vb 7
\&    Type            Action              Meaning
\&    \-\-\-\-            \-\-\-\-\-\-              \-\-\-\-\-\-\-
\&    all             log=miscctl         Log all messages by default.
\&    newgroup        doit=newgroup       Create group and log message.
\&    newgroup        log=newgroup        Log message.
\&    rmgroup         verify\-*=rmgroup    PGP verify, remove group and log message.
\&    checkgroups     doit=checkgroups    Process and log message.
.Ve
.IP "\fIcontrolbatch.log\fR" 4
.IX Item "controlbatch.log"
The \fBcontrolbatch\fR program appends all status messages to this file.  It is
rotated by \fBscanlogs\fR.
.IP "\fIerrlog\fR" 4
.IX Item "errlog"
This file contains the standard output and standard error of any program
spawned by \fBinnd\fR, such as channel feeds configured in \fInewsfeeds\fR.
This file should normally be empty.  \fBscanlogs\fR will print the 50
first lines of this log file if it is non-empty so that they appear
in daily Usenet reports generated by \fBnews.daily\fR.  Then, \fBscanlogs\fR
rotates this log file.
.IP "\fIexpire.log\fR" 4
.IX Item "expire.log"
By default, when \fBnews.daily\fR is going to expire old news articles, it writes
the name of the program it invokes, followed by \f(CW\*(C`start\*(C'\fR and the time it has
started.  Any output from that program is then written, indented by four
spaces.  Then, the name of the program is written, followed by \f(CW\*(C`end\*(C'\fR and
the time it has ended.
.Sp
Programs called, if needed, are in order:  \fBexpireover\fR, \fBctlinnd\fR
(with the \f(CW\*(C`lowmark\*(C'\fR option), \fBexpirerm\fR and \fBexpire\fR.  Removed articles
are listed in \fIexpire.list\fR and low marks for each newsgroup (that
is to say the number of the oldest article available in the newsgroup) in
\&\fIexpire.lastlowmark\fR.
.Sp
After the expiry process, \fBscanlogs\fR rotates \fIexpire.log\fR.
.IP "\fIinnfeed.log\fR" 4
.IX Item "innfeed.log"
When \fIdebug-level\fR is set in \fIinnfeed.conf\fR, \fBinnfeed\fR appends debugging
messages to this file.  Note that the name of this file can be changed with
the \fIlog-file\fR parameter in \fIinnfeed.conf\fR.  Be that as it may, the right
log file is rotated by \fBscanlogs\fR.
.Sp
\&\fBinnfeed\fR also logs its status in \fIinnfeed.status\fR (or the name set in
\&\fIstatus-file\fR) if \fIgen-html\fR is set to false but this log file is not
processed by \fBscanlogs\fR.
.IP "\fInews\fR" 4
.IX Item "news"
This file logs articles received by \fBinnd\fR.  Typical lines are:
.Sp
.Vb 3
\&    Aug 25 13:37:41.839 + news.server.fr <cancel.4066@foo.com> 1658 a.peer other.server.org inpaths!
\&    Aug 25 13:37:41.839 c news.server.fr <cancel.4066@foo.com> Cancelling <m070725@foo.com>
\&    Aug 25 13:37:54.638 \- a.peer <23k82@bar.net> 437 Poison newsgroup
.Ve
.Sp
The first one indicates that an article from \f(CW\*(C`news.server.fr\*(C'\fR has been
accepted (\f(CW\*(C`+\*(C'\fR).  Its Message-ID is \f(CW\*(C`<cancel.4066@foo.com>\*(C'\fR and we will
send the article to two peers (\f(CW\*(C`a.peer\*(C'\fR and \f(CW\*(C`other.server.org\*(C'\fR, as specified
in \fInewsfeeds\fR) and \f(CW\*(C`inpaths!\*(C'\fR (see \fBninpaths\fR for more details
about it).  The second line mentions that this previous article is a
cancel message (\f(CW\*(C`c\*(C'\fR) for \f(CW\*(C`<m070725@foo.com>\*(C'\fR and that it has been
processed (inndeed, \fBcontrolchan\fR processes all control articles except for
cancels which are handled by \fBinnd\fR).  The third line indicates that
the article whose Message-ID is \f(CW\*(C`<23k82@bar.net>\*(C'\fR has been rejected (\f(CW\*(C`\-\*(C'\fR)
because it is posted to a poison newsgroup (a Perl or a Python filter
located in \fIpathfilter\fR must have brought that reject along).
.Sp
See the \*(L"\s-1LOGGING\*(R"\s0 section of the \fIinnd\fR\|(8) man page for more information about
the format of this log file.
.Sp
\&\fBinnreport\fR summarizes the rejected articles reported in this file
and \fBscanlogs\fR rotates it.
.IP "\fInews.crit\fR" 4
.IX Item "news.crit"
All critical error messages issued by \fBinnd\fR are appended to this
file via syslog.  This log file should normally be empty.  \fBscanlogs\fR
will print the first 50 lines of this log file if it is non-empty so
that they appear in daily Usenet reports generated by \fBnews.daily\fR.
Then, \fBscanlogs\fR rotates this log file.
.Sp
You should have the following line in your system \fIsyslog.conf\fR file, using
a tab character for the delimiter:
.Sp
.Vb 1
\&    news.crit           <pathlog>/news.crit
.Ve
.Sp
(A typical entry is shown; it should agree with \fIpathlog\fR in \fIinn.conf\fR
and be tab-delimited.)
.IP "\fInews.err\fR" 4
.IX Item "news.err"
All major error messages issued by \fBinnd\fR are appended to this file
via syslog.  This log file should normally be empty.  \fBscanlogs\fR
will print the first 50 lines of this log file if it is non-empty so
that they appear in daily Usenet reports generated by \fBnews.daily\fR.
Then, \fBscanlogs\fR rotates this log file.
.Sp
You should have the following line in your system \fIsyslog.conf\fR file, using
a tab character for the delimiter:
.Sp
.Vb 1
\&    news.err            <pathlog>/news.err
.Ve
.Sp
(A typical entry is shown; it should agree with \fIpathlog\fR in \fIinn.conf\fR
and be tab-delimited.)
.IP "\fInews.notice\fR" 4
.IX Item "news.notice"
All standard error messages and status messages issued by \fBinnd\fR,
\&\fBinnfeed\fR, \fBnnrpd\fR and some other programs are appended to this file
via syslog.  \fBscanlogs\fR uses the Perl script \fBinnreport\fR to summarize
this file.  \fBinnreport\fR will also print the first \fImax_unknown\fR
unknown lines of this log file if such unrecognized lines are found in
\&\fInews.notice\fR so that they appear in daily Usenet reports generated
by \fBnews.daily\fR.  This parameter can be set in \fIinnreport.conf\fR.
Then, \fBscanlogs\fR rotates this log file.
.Sp
You should have the following line in your system \fIsyslog.conf\fR file, using
a tab character for the delimiter:
.Sp
.Vb 1
\&    news.notice         <pathlog>/news.notice
.Ve
.Sp
(A typical entry is shown; it should agree with \fIpathlog\fR in \fIinn.conf\fR
and be tab-delimited.)
.IP "\fInntpsend.log\fR" 4
.IX Item "nntpsend.log"
The \fBnntpsend\fR program appends all status messages to this file.  It is
rotated by \fBscanlogs\fR.
.IP "\fIperl\-nocem.log\fR" 4
.IX Item "perl-nocem.log"
The \fBperl-nocem\fR program appends all status messages to this file if
\&\f(CW\*(C`Sys::Syslog\*(C'\fR is not used (otherwise, such messages are appended to
\&\fInews.notice\fR).  It is rotated by \fBscanlogs\fR.
.IP "\fIsend\-ihave.log\fR" 4
.IX Item "send-ihave.log"
The \fBsend-ihave\fR program appends all status messages to this file.  It is
rotated by \fBscanlogs\fR.
.IP "\fIsend\-nntp.log\fR" 4
.IX Item "send-nntp.log"
The \fBsend-nntp\fR program appends all status messages to this file.  It is
rotated by \fBscanlogs\fR.
.IP "\fIsend\-uucp.log\fR" 4
.IX Item "send-uucp.log"
The \fBsend-uucp\fR program appends all status messages to this file.  It is
rotated by \fBscanlogs\fR.
.IP "\fIunwanted.log\fR" 4
.IX Item "unwanted.log"
This log maintains a count of the number of articles that were rejected
because they were posted to newsgroups that do not exist at the local site.
This file is updated by \fBinnreport\fR while processing the \fInews.notice\fR
log file and it is maintained in reverse numeric order (the most popular
rejected group first).  This file is not rotated so as to keep the count
of the articles posted to newsgroups which are absent from the \fIactive\fR
file of the news server.
.Sp
Note that \fIlogtrash\fR has to be set to true in \fIinn.conf\fR for this file
to be generated.
.PP
Finally, these files are also rotated by \fBscanlogs\fR, if they exist, but
their contents are not summarized.  Here are their names:
.PP
.Vb 3
\&    badcontrol.log
\&    badpgp.log
\&    failedpgp.log
.Ve
.PP
They can be used by programs which \s-1PGP\s0 verify articles.
.SH "HISTORY"
.IX Header "HISTORY"
Written by Landon Curt Noll <chongo@toad.com> and Rich \f(CW$alz\fR
<rsalz@uunet.uu.net> for InterNetNews.  Rewritten and converted
to \s-1POD\s0 by Julien Elie.
.PP
\&\f(CW$Id:\fR newslog.pod 9903 2015\-06\-20 17:20:46Z iulius $
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIcontrol.ctl\fR\|(5), \fIctlinnd\fR\|(8), \fIexpire\fR\|(8), \fIexpireover\fR\|(8), \fIexpirerm\fR\|(8), \fIinn.conf\fR\|(5),
\&\fIinnd\fR\|(8), \fIinnfeed.conf\fR\|(5), \fIinnreport\fR\|(8), \fIinnreport.conf\fR\|(5), \fInews.daily\fR\|(8),
\&\fInnrpd\fR\|(8), \fInntpsend\fR\|(8), \fIscanlogs\fR\|(8), \fIsend\-nntp\fR\|(8), \fIsend\-uucp\fR\|(8), \fIsyslog.conf\fR\|(5),
\&\fItally.control\fR\|(8).
