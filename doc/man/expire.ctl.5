.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "EXPIRE.CTL 5"
.TH EXPIRE.CTL 5 "2015-09-12" "INN 2.6.3" "InterNetNews Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
expire.ctl \- Configuration file for article expiration
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The file \fIpathetc\fR/expire.ctl is the default configuration file for
\&\fBexpire\fR and \fBexpireover\fR, which read it at start-up.  It serves two
purposes:  it defines how long history entries for expired or rejected
articles are remembered, and it determines how long articles stored on the
server are retained.
.PP
Normally, if all of the storage methods used by the server are
self-expiring (such as \s-1CNFS\s0), all lines except the \f(CW\*(C`/remember/\*(C'\fR setting
(described below) are ignored.  This can be changed with the \fB\-N\fR option
to \fBexpire\fR or \fBexpireover\fR.
.PP
Blank lines and lines beginning with a number sign (\f(CW\*(C`#\*(C'\fR) are ignored.
All other lines should be in one of two formats.  The order of the file is
significant, and the last matching entry will be used.
.PP
The first format specifies how long to keep history entries for articles
that aren't present in the news spool.  These are articles that have
either already expired, or articles which the server rejected (when
\&\fIremembertrash\fR is set to true in \fIinn.conf\fR).  There should be one and
only one line in this format, which looks like:
.PP
.Vb 1
\&    /remember/:<days>
.Ve
.PP
where <days> is a decimal number that specifies the minimum number of days
a history record for a given message-ID is retained (from its original
posting time), regardless of whether the article is present in the spool.
(History entries for articles still present in the spool are always retained.)
.PP
The primary reason to retain a record of old articles is in case a peer
offers old articles that were previously accepted but have already
expired.  Without a history record for such articles, the server would
accept the article again and readers would see duplicate articles.
Articles older than a certain number of days won't be accepted by the
server at all (see \fIartcutoff\fR in \fIinn.conf\fR\|(5) and the \fB\-c\fR flag in
\&\fIinnd\fR\|(8)), and this setting should probably match that time period
to ensure that the server never accepts duplicates.  As the default
value for \fIartcutoff\fR is \f(CW10\fR days, it means that \f(CW\*(C`/remember/\*(C'\fR
should be set to \f(CW11\fR days in order to take into account articles
whose posting date is one day into the future.
.PP
Most of the lines in this file will be in the second format, which
consists of either four or five colon-separated fields:
.PP
.Vb 1
\&    <pattern>:<flag>:<min>:<default>:<max>
.Ve
.PP
if \fIgroupbaseexpiry\fR is true in \fIinn.conf\fR (the default), and otherwise:
.PP
.Vb 1
\&    <classnum>:<min>:<default>:<max>
.Ve
.PP
All lines must be in the correct format given the current setting of
\&\fIgroupbaseexpiry\fR, and therefore the two formats cannot co-exist in the
same file.
.PP
Normally, a rule matches a newsgroup through the combination of the
<pattern> and <flag> fields.  <pattern> is a \fIuwildmat\fR\|(3)\-style pattern,
specifying the newsgroups to which the line is applied.  Note that the
last matching entry will be used, so general patterns (such as defaults
for all groups where <pattern> is \f(CW\*(C`*\*(C'\fR) should appear at the beginning of
the file before more specific settings.
.PP
The <flag> field can be used to further limit newsgroups to which the line
applies, and should be chosen from the following set:
.PP
.Vb 4
\&    M   Only moderated groups
\&    U   Only unmoderated groups
\&    A   All groups
\&    X   Remove the article from all groups it appears in
.Ve
.PP
One of \f(CW\*(C`M\*(C'\fR, \f(CW\*(C`U\*(C'\fR, or \f(CW\*(C`A\*(C'\fR must be specified.  \f(CW\*(C`X\*(C'\fR should be used in
combination with one of the other letters, not by itself.
.PP
An expiration policy is applied to every article in a newsgroup it
matches.  There is no way to set an expiration policy for articles
crossposted to groups you don't carry that's different than other articles
in the same group.  Normally, articles are not completely deleted until
they expire out of every group to which they were posted, but if an
article is expired following a rule where <flag> contains \f(CW\*(C`X\*(C'\fR, it is deleted
out of all newsgroups to which it was posted immediately.
.PP
If \fIgroupbaseexpiry\fR is instead set to false, there is no <pattern> and
<flag> field and the above does not apply.  Instead, there is a single
<classnum> field, which is either a number matching the storage class
number specified in \fIstorage.conf\fR or \f(CW\*(C`*\*(C'\fR to specify a default for all
storage classes.  All articles stored in a storage class will be expired
following the instructions in the line with a matching <classnum>, and
when articles are expired, they're always removed from all groups to which
they were posted.
.PP
The remaining three fields are the same in either format, and are used to
determine how long an article should be kept from its original arrival
time (unless the \fB\-p\fR flag is passed to \fIexpire\fR\|(8) or \fIexpireover\fR\|(8), in
which case its original posting time is used).  Each field should be either
a decimal number of days (fractions like \f(CW8.5\fR are allowed, but remember
that articles are only removed when \fBexpire\fR or \fBexpireover\fR is run,
normally once a day by \fBnews.daily\fR) or the word \f(CW\*(C`never\*(C'\fR.
.PP
The middle field, <default>, will be used as the expiration period for
most articles.  The other two fields, <min> and <max>, only come into
play if the article requests a particular expiration date with an Expires:
header.  Articles with an Expires: header will be expired at the date given
in that header, subject to the constraints that they will be retained at
least <min> days and no longer than <max> days.
.PP
If <min> is set to \f(CW\*(C`never\*(C'\fR, no article matching that line will ever be
expired.  If <default> is set to \f(CW\*(C`never\*(C'\fR, no article matching that line
without an explicit Expires: header will ever be expired.  If <max> is
set to \f(CW\*(C`never\*(C'\fR, Expires: headers will be honored no matter how far into
the future they are.
.PP
One should think of the fields as a lower bound, the default, and an upper
bound.  Since most articles do not have an Expires: header, the second
field is the most important and most commonly applied.
.PP
Articles that do not match any expiration rule will not be expired, but
this is considered an error and will result in a warning.  There should
always be a default line (a line with a <pattern> of \f(CW\*(C`*\*(C'\fR and <flag> of
\&\f(CW\*(C`A\*(C'\fR, or a line with a <classnum> of \f(CW\*(C`*\*(C'\fR), which can explicitly state
that articles should never expire by default if that's the desired
configuration.  The default line should generally be the first line of the
file (except for \f(CW\*(C`/remember/\*(C'\fR) so that other expiration rules can
override it.
.PP
It is often useful to honor the Expires: header in articles, especially
those in moderated groups.  To do this, set <min> to zero, <default> to
whatever normal expiration you wish, and <max> to \f(CW\*(C`never\*(C'\fR or some large
number, like \f(CW365\fR days for a maximum article life of a year.
.PP
To ignore any Expires: header, set all three fields to the same value.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
When \fIgroupbaseexpiry\fR is true (the default):
.PP
.Vb 2
\&    # Keep expired article history for 11 days, matching artcutoff plus one.
\&    /remember/:11
\&
\&    # Most articles stay for two weeks, ignoring Expires: headers.
\&    *:A:14:14:14
\&
\&    # Accept Expires: headers in moderated groups for up to a year and
\&    # retain moderated groups for a bit longer.
\&    *:M:1:30:365
\&
\&    # Keep local groups for a long time and local project groups forever.
\&    example.*:A:1:90:90
\&    example.project.*:A:never:never:never
.Ve
.PP
When \fIgroupbaseexpiry\fR is false, for class-based expiration:
.PP
.Vb 2
\&    # Keep expired article history for 11 days, matching artcutoff plus one.
\&    /remember/:11
\&
\&    # Set a default expiration of seven days and honour Expires: headers
\&    # within reasonable limits.
\&    *:1:7:35
\&
\&    # Class 0 is retained for two weeks and honor Expires: headers
\&    # within reasonable limits.
\&    0:1:14:65
.Ve
.SH "HISTORY"
.IX Header "HISTORY"
Written by Rich \f(CW$alz\fR <rsalz@uunet.uu.net> for InterNetNews.  Converted to
\&\s-1POD\s0 by Russ Allbery <eagle@eyrie.org>.
.PP
\&\f(CW$Id:\fR expire.ctl.pod 9767 2014\-12\-07 21:13:43Z iulius $
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIexpire\fR\|(8), \fIexpireover\fR\|(8), \fIinn.conf\fR\|(5), \fIinnd\fR\|(8), \fInews.daily\fR\|(8),
\&\fIstorage.conf\fR\|(5), \fIuwildmat\fR\|(3).
